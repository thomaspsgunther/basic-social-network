basePath: /api/v1/
definitions:
  comments.Comment:
    properties:
      createdAt:
        type: string
      id:
        type: string
      likeCount:
        type: integer
      message:
        type: string
      postId:
        type: string
      user:
        $ref: '#/definitions/shared.User'
    type: object
  comments.Comments:
    properties:
      commentList:
        items:
          $ref: '#/definitions/comments.Comment'
        type: array
    type: object
  posts.LikedJson:
    properties:
      liked:
        type: boolean
    type: object
  shared.Post:
    properties:
      commentCount:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      image:
        type: string
      likeCount:
        type: integer
      user:
        $ref: '#/definitions/shared.User'
    type: object
  shared.Posts:
    properties:
      postList:
        items:
          $ref: '#/definitions/shared.Post'
        type: array
    type: object
  shared.TokenJson:
    properties:
      token:
        type: string
    type: object
  shared.User:
    properties:
      avatar:
        type: string
      description:
        type: string
      email:
        type: string
      followerCount:
        type: integer
      fullName:
        type: string
      id:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  shared.Users:
    properties:
      userList:
        items:
          $ref: '#/definitions/shared.User'
        type: array
    type: object
  users.FollowsJson:
    properties:
      follows:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for a basic social network.
  license:
    name: MIT
    url: https://opensource.org/license/mit
  title: Y API
  version: "1.0"
paths:
  /comments:
    post:
      consumes:
      - application/json
      description: Create a new comment
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/comments.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/comments.Comment'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Create a new comment
      tags:
      - comments
  /comments/{id}:
    delete:
      description: 'Delete a single comment by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Delete a single comment by: id'
      tags:
      - comments
    put:
      consumes:
      - application/json
      description: 'Update a single comment by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Comment Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/comments.Comment'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Update a single comment by: id'
      tags:
      - comments
  /comments/{post_id}:
    get:
      description: 'Read a list of comments by: post_id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID
        format: uuid
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/comments.Comments'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Read a list of comments by: post_id'
      tags:
      - comments
  /comments/like/{id}:
    post:
      description: 'Like a single comment by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Like a single comment by: id'
      tags:
      - comments
  /comments/unlike/{id}:
    post:
      description: 'Unlike a single comment by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Unlike a single comment by: id'
      tags:
      - comments
  /login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/shared.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.TokenJson'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Login user
      tags:
      - login
  /login/refreshtoken:
    post:
      consumes:
      - application/json
      description: Refresh user token
      parameters:
      - description: Token Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/shared.TokenJson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.TokenJson'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Refresh user token
      tags:
      - login
  /login/register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/shared.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.TokenJson'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create a new user
      tags:
      - login
  /posts:
    get:
      description: Read a list of posts using pagination
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: limit of pagination
        in: query
        name: limit
        required: true
        type: integer
      - description: cursor for pagination
        format: byte
        in: query
        name: cursor
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Posts'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Read a list of posts using pagination
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/shared.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Post'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Create a new post
      tags:
      - posts
  /posts/{id}:
    delete:
      description: 'Delete a single post by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Delete a single post by: id'
      tags:
      - posts
    get:
      description: 'Read a single post by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Post'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Read a single post by: id'
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: 'Update a single post by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Post Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/shared.Post'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Update a single post by: id'
      tags:
      - posts
  /posts/checkliked/{user_id}_{post_id}:
    get:
      description: 'Check if a user has liked a post by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        format: uuid
        in: path
        name: user_id
        required: true
        type: string
      - description: Post ID
        format: uuid
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/posts.LikedJson'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Check if a user has liked a post by: id'
      tags:
      - posts
  /posts/likes/{id}:
    get:
      description: 'Read a list of users who liked a post by: post_id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID
        format: uuid
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Users'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Read a list of users who liked a post by: post_id'
      tags:
      - posts
  /posts/likes/{user_id}_{post_id}:
    delete:
      description: 'Unlike a post by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        format: uuid
        in: path
        name: user_id
        required: true
        type: string
      - description: Post ID
        format: uuid
        in: path
        name: post_id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Unlike a post by: id'
      tags:
      - posts
    post:
      description: 'Like a post by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        format: uuid
        in: path
        name: user_id
        required: true
        type: string
      - description: Post ID
        format: uuid
        in: path
        name: post_id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Like a post by: id'
      tags:
      - posts
  /users/{id_list}:
    get:
      description: 'Read a list of users by: id_list'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID List
        in: path
        name: id_list
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Users'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Read a list of users by: id_list'
      tags:
      - users
  /users/{id}:
    delete:
      description: 'Delete a single user by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Delete a single user by: id'
      tags:
      - users
    put:
      consumes:
      - application/json
      description: 'Update a single user by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: User Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/shared.User'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Update a single user by: id'
      tags:
      - users
  /users/checkfollower/{follower_id}_{followed_id}:
    get:
      description: 'Check if a user follows another user by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Follower ID
        format: uuid
        in: path
        name: follower_id
        required: true
        type: string
      - description: Followed ID
        format: uuid
        in: path
        name: followed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.FollowsJson'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Check if a user follows another user by: id'
      tags:
      - users
  /users/follow/{follower_id}_{followed_id}:
    post:
      description: 'Follow a user by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Follower ID
        format: uuid
        in: path
        name: follower_id
        required: true
        type: string
      - description: Followed ID
        format: uuid
        in: path
        name: followed_id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Follow a user by: id'
      tags:
      - users
  /users/followed/{id}:
    get:
      description: 'Read a list of who a user follows by: user_id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Users'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Read a list of who a user follows by: user_id'
      tags:
      - users
  /users/followers/{id}:
    get:
      description: 'Read a list of who follows a user by: user_id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Users'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Read a list of who follows a user by: user_id'
      tags:
      - users
  /users/posts/{user_id}:
    get:
      description: 'Read a list of posts by: user_id using pagination'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        format: uuid
        in: path
        name: user_id
        required: true
        type: string
      - description: limit of pagination
        in: query
        name: limit
        required: true
        type: integer
      - description: cursor for pagination
        format: byte
        in: query
        name: cursor
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Posts'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Read a list of posts by: user_id using pagination'
      tags:
      - users
  /users/search/{search_term}:
    get:
      description: 'Read a list of users by: search_term'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Search Term
        in: path
        name: search_term
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Users'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: 'Read a list of users by: search_term'
      tags:
      - users
  /users/unfollow/{follower_id}_{followed_id}:
    delete:
      description: 'Unfollow a user by: id'
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Follower ID
        format: uuid
        in: path
        name: follower_id
        required: true
        type: string
      - description: Followed ID
        format: uuid
        in: path
        name: followed_id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: 'Unfollow a user by: id'
      tags:
      - users
swagger: "2.0"
